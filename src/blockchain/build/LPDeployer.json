{
  "contractName": "LPDeployer",
  "abi": [
    {
      "inputs": [],
      "name": "lpParameters",
      "outputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rewardProportion",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"lpParameters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardProportion\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/LPDeployer.sol\":\"LPDeployer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/contracts/LPDeployer.sol\":{\"keccak256\":\"0x8438abb9d4a8de922dc5ab0d569b0f2d452346b2a114290485920d025316acec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26971fd95181cfbab43df724bdc3b97e4720d8831e1cc78d8d331b23bf12901e\",\"dweb:/ipfs/QmUKoSYJPjt5ejHf9FqHYw6SReHHsNUBgH8SutmwPJUqoX\"]},\"project:/contracts/LPFarm.sol\":{\"keccak256\":\"0x42103fbc9e476c197fa5c2149e2bbc793a1c5e493e163a7f6500560b6e7f7d45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d79269457ee6331368e2487bef90de3bf9ec0ece7876efdbc3382931e5a7ee57\",\"dweb:/ipfs/QmPoeTfBR3roKZKUQXLoe6jUsbowYgzEEMtUE4w2nGP3e8\"]},\"project:/contracts/interfaces/IERC20LP.sol\":{\"keccak256\":\"0x9ae0f9766d8123db8132cec19498eab6acb733b10af6b2ddd1cd81f004b1879d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79db914ce96342d76403c18878b59f09c0e028799cbc28277bc3f25c01aca3ac\",\"dweb:/ipfs/QmU3b3vpKci1Rp7rv17NovbxYtH57jPnip3Rhp3ZnWN7Mu\"]},\"project:/contracts/interfaces/IlpDeployer.sol\":{\"keccak256\":\"0xa8bdfc56cb618799dc3108e2034aeda1631db3f7d0dc5f7a87762511a102bf65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b8fbfdf1884411203c45e27ce97c56c4273e0aba9f2be3df4428b9b4b16ef8c\",\"dweb:/ipfs/QmdozitGMPE4rRahZa7tqiGGbNpLko9FaPDMiFXGjMFDEq\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101a4806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c9f8350314610030575b600080fd5b610038610051565b6040516100489493929190610129565b60405180910390f35b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154905084565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100fa826100cf565b9050919050565b61010a816100ef565b82525050565b6000819050919050565b61012381610110565b82525050565b600060808201905061013e6000830187610101565b61014b6020830186610101565b6101586040830185610101565b610165606083018461011a565b9594505050505056fea26469706673582212203e5f1155493cf4bb70897d4a8b1bf1563b58af1355765a014c3d33bba5f1aa1f64736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c9f8350314610030575b600080fd5b610038610051565b6040516100489493929190610129565b60405180910390f35b60008060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154905084565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100fa826100cf565b9050919050565b61010a816100ef565b82525050565b6000819050919050565b61012381610110565b82525050565b600060808201905061013e6000830187610101565b61014b6020830186610101565b6101586040830185610101565b610165606083018461011a565b9594505050505056fea26469706673582212203e5f1155493cf4bb70897d4a8b1bf1563b58af1355765a014c3d33bba5f1aa1f64736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1128:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:11",
                "type": ""
              }
            ],
            "src": "7:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "184:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "194:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "223:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "205:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "194:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "166:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "176:7:11",
                "type": ""
              }
            ],
            "src": "139:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "323:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "346:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "328:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "294:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "301:3:11",
                "type": ""
              }
            ],
            "src": "241:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "410:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "420:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "431:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "420:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "392:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "402:7:11",
                "type": ""
              }
            ],
            "src": "365:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "513:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "530:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "553:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "535:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "535:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "523:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "523:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "523:37:11"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "501:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "508:3:11",
                "type": ""
              }
            ],
            "src": "448:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "754:371:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "764:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "776:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "787:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "772:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "772:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "764:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "845:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "858:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "869:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "854:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "854:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "801:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "801:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "801:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "926:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "939:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "950:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "935:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "935:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "882:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "882:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "882:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1008:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1021:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1032:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1017:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1017:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "964:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "964:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "964:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "1090:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1103:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1114:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1099:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1099:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1046:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1046:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1046:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "702:9:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "714:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "722:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "730:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "738:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "749:4:11",
                "type": ""
              }
            ],
            "src": "572:553:11"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "127:842:5:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "127:842:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;314:41;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:126:11:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:77::-;402:7;431:5;420:16;;365:77;;;:::o;448:118::-;535:24;553:5;535:24;:::i;:::-;530:3;523:37;448:118;;:::o;572:553::-;749:4;787:3;776:9;772:19;764:27;;801:71;869:1;858:9;854:17;845:6;801:71;:::i;:::-;882:72;950:2;939:9;935:18;926:6;882:72;:::i;:::-;964;1032:2;1021:9;1017:18;1008:6;964:72;:::i;:::-;1046;1114:2;1103:9;1099:18;1090:6;1046:72;:::i;:::-;572:553;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0;\r\n\r\nimport \"./interfaces/IlpDeployer.sol\";\r\nimport \"./LPFarm.sol\";\r\n\r\ncontract LPDeployer is IlpDeployer {\r\n    struct LpParameters {\r\n        address factory;\r\n        address owner;\r\n        address token;\r\n        uint256 rewardProportion;\r\n    }\r\n\r\n    LpParameters public override lpParameters;\r\n\r\n    function deployLPFarm(\r\n        address factory,\r\n        address owner,\r\n        address token,\r\n        uint256 rewardProportion\r\n    ) internal returns (address lpFarm) {\r\n        lpParameters = LpParameters({\r\n            factory: factory,\r\n            owner: owner,\r\n            token: token,\r\n            rewardProportion: rewardProportion\r\n        });\r\n        lpFarm = address(\r\n            new LPFarm{\r\n                salt: keccak256(\r\n                    abi.encode(factory, owner, token, rewardProportion)\r\n                )\r\n            }()\r\n        );\r\n        delete lpParameters;\r\n    }\r\n}\r\n",
  "sourcePath": "F:\\coding\\projects\\dapps\\lpfarming-truffle\\contracts\\LPDeployer.sol",
  "ast": {
    "absolutePath": "project:/contracts/LPDeployer.sol",
    "exportedSymbols": {
      "IERC20": [
        666
      ],
      "IERC20LP": [
        1268
      ],
      "IlpDeployer": [
        1282
      ],
      "LPDeployer": [
        779
      ],
      "LPFarm": [
        1255
      ]
    },
    "id": 780,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 715,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:5"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IlpDeployer.sol",
        "file": "./interfaces/IlpDeployer.sol",
        "id": 716,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 780,
        "sourceUnit": 1283,
        "src": "61:38:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/LPFarm.sol",
        "file": "./LPFarm.sol",
        "id": 717,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 780,
        "sourceUnit": 1256,
        "src": "101:22:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 718,
              "name": "IlpDeployer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1282,
              "src": "150:11:5"
            },
            "id": 719,
            "nodeType": "InheritanceSpecifier",
            "src": "150:11:5"
          }
        ],
        "canonicalName": "LPDeployer",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 779,
        "linearizedBaseContracts": [
          779,
          1282
        ],
        "name": "LPDeployer",
        "nameLocation": "136:10:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "LPDeployer.LpParameters",
            "id": 728,
            "members": [
              {
                "constant": false,
                "id": 721,
                "mutability": "mutable",
                "name": "factory",
                "nameLocation": "208:7:5",
                "nodeType": "VariableDeclaration",
                "scope": 728,
                "src": "200:15:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 720,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "200:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 723,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "234:5:5",
                "nodeType": "VariableDeclaration",
                "scope": 728,
                "src": "226:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 722,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "226:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 725,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "258:5:5",
                "nodeType": "VariableDeclaration",
                "scope": 728,
                "src": "250:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 724,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "250:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 727,
                "mutability": "mutable",
                "name": "rewardProportion",
                "nameLocation": "282:16:5",
                "nodeType": "VariableDeclaration",
                "scope": 728,
                "src": "274:24:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 726,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "274:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "LpParameters",
            "nameLocation": "176:12:5",
            "nodeType": "StructDefinition",
            "scope": 779,
            "src": "169:137:5",
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1281
            ],
            "constant": false,
            "functionSelector": "c9f83503",
            "id": 732,
            "mutability": "mutable",
            "name": "lpParameters",
            "nameLocation": "343:12:5",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 731,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "334:8:5"
            },
            "scope": 779,
            "src": "314:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_LpParameters_$728_storage",
              "typeString": "struct LPDeployer.LpParameters"
            },
            "typeName": {
              "id": 730,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 729,
                "name": "LpParameters",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 728,
                "src": "314:12:5"
              },
              "referencedDeclaration": 728,
              "src": "314:12:5",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_LpParameters_$728_storage_ptr",
                "typeString": "struct LPDeployer.LpParameters"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 777,
              "nodeType": "Block",
              "src": "536:430:5",
              "statements": [
                {
                  "expression": {
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 745,
                      "name": "lpParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 732,
                      "src": "547:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LpParameters_$728_storage",
                        "typeString": "struct LPDeployer.LpParameters storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 747,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 734,
                          "src": "599:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 748,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 736,
                          "src": "628:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 749,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 738,
                          "src": "655:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 750,
                          "name": "rewardProportion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 740,
                          "src": "693:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 746,
                        "name": "LpParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 728,
                        "src": "562:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_LpParameters_$728_storage_ptr_$",
                          "typeString": "type(struct LPDeployer.LpParameters storage pointer)"
                        }
                      },
                      "id": 751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "factory",
                        "owner",
                        "token",
                        "rewardProportion"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "562:159:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LpParameters_$728_memory_ptr",
                        "typeString": "struct LPDeployer.LpParameters memory"
                      }
                    },
                    "src": "547:174:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LpParameters_$728_storage",
                      "typeString": "struct LPDeployer.LpParameters storage ref"
                    }
                  },
                  "id": 753,
                  "nodeType": "ExpressionStatement",
                  "src": "547:174:5"
                },
                {
                  "expression": {
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 754,
                      "name": "lpFarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 743,
                      "src": "732:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "763:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LPFarm_$1255_$",
                                "typeString": "function () returns (contract LPFarm)"
                              },
                              "typeName": {
                                "id": 758,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 757,
                                  "name": "LPFarm",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1255,
                                  "src": "767:6:5"
                                },
                                "referencedDeclaration": 1255,
                                "src": "767:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LPFarm_$1255",
                                  "typeString": "contract LPFarm"
                                }
                              }
                            },
                            "id": 769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "salt"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 763,
                                        "name": "factory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 734,
                                        "src": "841:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 764,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 736,
                                        "src": "850:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 765,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 738,
                                        "src": "857:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 766,
                                        "name": "rewardProportion",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 740,
                                        "src": "864:16:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 761,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "830:3:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 762,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encode",
                                      "nodeType": "MemberAccess",
                                      "src": "830:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 767,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "830:51:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 760,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "798:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 768,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "798:102:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "src": "763:152:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LPFarm_$1255_$salt",
                              "typeString": "function () returns (contract LPFarm)"
                            }
                          },
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "763:154:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LPFarm_$1255",
                            "typeString": "contract LPFarm"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LPFarm_$1255",
                            "typeString": "contract LPFarm"
                          }
                        ],
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "741:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 755,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "741:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "741:187:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "732:196:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 773,
                  "nodeType": "ExpressionStatement",
                  "src": "732:196:5"
                },
                {
                  "expression": {
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "939:19:5",
                    "subExpression": {
                      "id": 774,
                      "name": "lpParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 732,
                      "src": "946:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LpParameters_$728_storage",
                        "typeString": "struct LPDeployer.LpParameters storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "939:19:5"
                }
              ]
            },
            "id": 778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployLPFarm",
            "nameLocation": "373:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "404:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "396:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 736,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "430:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "422:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "422:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 738,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "454:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "446:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 740,
                  "mutability": "mutable",
                  "name": "rewardProportion",
                  "nameLocation": "478:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "470:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "385:116:5"
            },
            "returnParameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 743,
                  "mutability": "mutable",
                  "name": "lpFarm",
                  "nameLocation": "528:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "520:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "519:16:5"
            },
            "scope": 779,
            "src": "364:602:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 780,
        "src": "127:842:5",
        "usedErrors": []
      }
    ],
    "src": "33:938:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x50d2343ba52aebEA363831e6FF41F2C2ec3A410b",
      "transactionHash": "0xc3daa60781e3faac8ff1b00406b4cee0c5358f838ba0af5898039814f59f267b"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xE0620e6C504B7FD0E4E5Cb4fe598E9555ec75FEA",
      "transactionHash": "0xe0286bca6173f07f92ac14a688114af391cd12f48fc0f11a65fc392e482bf9b9"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-14T14:51:12.213Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}